plugins {
  id "java"
  id "checkstyle"
  id "com.github.johnrengelman.shadow" version "7.0.0"
  id "io.github.slimjar" version "1.3.0"
  id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
  id "net.kyori.blossom" version "1.3.0"
}

group "io.github.shiruka"

java {
  sourceCompatibility = JavaVersion.VERSION_16
  targetCompatibility = JavaVersion.VERSION_16
}

jar {
  manifest {
    attributes 'Main-Class': 'io.github.shiruka.shiruka.Bootstrap'
  }
}

compileJava {
  options.encoding = "UTF-8"
}

tasks.withType(JavaCompiler) {
  options.encoding = "UTF-8"
  options.compilerArgs += ["-Duser.language=en", "-Duser.country=US"]
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier "sources"
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  javadoc.options.encoding = "UTF-8"
  javadoc.options.tags = ["todo"]
  javadoc.options.addBooleanOption("html5", true)
  classifier "javadoc"
  from javadoc.destinationDir
}

checkstyle {
  configFile = file("checkstyle.xml")
  checkstyleTest.enabled = false
}

blossom {
  def constants = "src/main/java/io/github/shiruka/shiruka/Constants.java"
  replaceToken("@version@", project.version, constants)
}

repositories {
  mavenCentral()
  maven {
    url "https://jitpack.io"
  }
  maven {
    url "https://repo.vshnv.tech/releases/"
  }
  mavenLocal()
}

dependencies {
  // Api
  implementation "io.github.shiruka:api:3.0.7"

  // Implmenetation
  implementation "io.github.slimjar:slimjar:1.2.6"

  // Slim
  slim "org.jline:jline:3.20.0"
  slim "com.lmax:disruptor:3.4.4"
  slim "com.lmax:disruptor:3.4.4"
  slim "info.picocli:picocli:4.6.1"
  slim "it.unimi.dsi:fastutil:8.5.4"
  slim "com.google.inject:guice:5.0.1"
  slim "org.jline:jline-reader:3.20.0"
  slim "org.jline:jline-console:3.20.0"
  slim 'io.netty:netty-all:4.1.67.Final'
  slim "org.jetbrains:annotations:22.0.0"
  slim "com.google.guava:guava:30.1.1-jre"
  slim "net.sf.jopt-simple:jopt-simple:5.0.4"
  slim "org.jline:jline-terminal-jansi:3.20.0"
  slim "org.apache.logging.log4j:log4j-core:2.14.1"
  slim "org.apache.logging.log4j:log4j-core:2.14.1"
  slim "net.minecrell:terminalconsoleappender:1.2.0"
  slim "org.apache.logging.log4j:log4j-iostreams:2.14.1"
  slim "org.apache.logging.log4j:log4j-slf4j-impl:2.14.1"
  slim "com.github.Infumia.InfumiaLib:InfumiaCommon:2.4.0"
  slim "com.fasterxml.jackson.core:jackson-databind:2.12.4"
  slim "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.4"

  // Processor
  annotationProcessor 'org.jetbrains:annotations:22.0.0'

  // Lombok
  compileOnly "org.projectlombok:lombok:1.18.20"
  annotationProcessor "org.projectlombok:lombok:1.18.20"

  // Test
  testImplementation "org.junit.jupiter:junit-jupiter:5.7.2"
}

test {
  useJUnitPlatform()
}

artifacts {
  archives sourcesJar
  archives javadocJar
  archives shadowJar
}

shadowJar {
  archiveBaseName.set("Shiruka")
  archiveClassifier.set(null)
  archiveVersion.convention(null)
  archiveVersion.set(null)
}
